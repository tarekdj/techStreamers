{"version":3,"sources":["webpack://gatsby-starter-blog/./src/templates/streamer.js"],"names":["data","location","streamer","streamersJson","siteTitle","site","siteMetadata","title","previous","next","name","description","bio","className","itemScope","itemType","src","avatar","alt","itemProp","youtubeUrl","href","twitchUrl","twitter","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"mappings":"kLAkEA,UA5DyB,SAAC,GAAwB,IAAD,EAArBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAWF,EAAKG,cAChBC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OACE,gBAAC,IAAD,CAAQR,SAAUA,EAAUM,MAAOH,GACjC,gBAAC,IAAD,CACEG,MAAOL,EAASQ,KAChBC,YAAaT,EAASU,MAExB,2BACEC,UAAU,YACVC,WAAS,EACTC,SAAS,6BAET,8BACE,uBAAKC,IAAKd,EAASe,OAAQC,IAAKhB,EAASQ,OACzC,sBAAIS,SAAS,YAAYjB,EAASQ,OAEpC,+BACA,yBAAIR,EAASU,KACb,0BACO,WAAQ,GAAIV,EAASkB,WAAY,OAAO,0BAAI,qBAAGC,KAAMnB,EAASkB,YAAlB,YAA5C,GACA,WAAQ,GAAIlB,EAASoB,UAAW,OAAO,0BAAI,qBAAGD,KAAMnB,EAASoB,WAAlB,WAA3C,GACA,WAAQ,GAAIpB,EAASqB,QAAS,OAAO,0BAAI,qBAAGF,KAAMnB,EAASqB,SAAlB,YAAzC,KAGP,4BAEF,uBAAKV,UAAU,iBACb,sBACEW,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGrB,GACC,gBAAC,EAAAsB,KAAD,CAAMC,GAAI,IAAMvB,EAASwB,OAAOC,KAAMC,IAAI,QAA1C,KACK1B,EAASE,OAIlB,0BACGD,GACC,gBAAC,EAAAqB,KAAD,CAAMC,GAAI,IAAMtB,EAAKuB,OAAOC,KAAMC,IAAI,QACnCzB,EAAKC,KADR","file":"component---src-templates-streamer-js-28f61c0f44780b642408.js","sourcesContent":["import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst StreamerTemplate = ({ data, location }) => {\r\n  const streamer = data.streamersJson\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const { previous, next } = data\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo\r\n        title={streamer.name}\r\n        description={streamer.bio}\r\n      />\r\n      <article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <header>\r\n          <img src={streamer.avatar} alt={streamer.name} />\r\n          <h1 itemProp=\"headline\">{streamer.name}</h1>\r\n        </header>\r\n        <section>\r\n        <p>{streamer.bio}</p>\r\n        <ul>\r\n            { (() => { if (streamer.youtubeUrl) return <li><a href={streamer.youtubeUrl}>Youtube</a></li>})()}\r\n            { (() => { if (streamer.twitchUrl) return <li><a href={streamer.twitchUrl}>Twitch</a></li>})()}\r\n            { (() => { if (streamer.twitter) return <li><a href={streamer.twitter}>Twitter</a></li>})()}\r\n        </ul>\r\n        </section>\r\n        <hr />\r\n      </article>\r\n      <nav className=\"blog-post-nav\">\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={\"/\" + previous.fields.slug} rel=\"prev\">\r\n                ← {previous.name}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={\"/\" + next.fields.slug} rel=\"next\">\r\n                {next.name} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default StreamerTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query StreamerBySlug (\r\n    $id: String!\r\n    $previousStreamerId: String\r\n    $nextStreamerId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    streamersJson(id: { eq: $id }) {\r\n      id\r\n      name\r\n      bio\r\n      avatar\r\n      youtubeUrl\r\n      twitchUrl\r\n      twitter\r\n    }\r\n\r\n    previous: streamersJson(id: { eq: $previousStreamerId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      name\r\n    }\r\n    next: streamersJson(id: { eq: $nextStreamerId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      name\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}